import classes.pclass;
import javax.swing.JOptionPane;


public class Play extends javax.swing.JFrame {

    /**
     * Creates new form Play
     */
    
    
     int checkno=0;
     String winner;
     
    public Play() {
        initComponents();
        jpWrap.setSize(759,759);
	jpWrap.setSize(760,760);
        pclass.turn = 2;
        lblchance.setText("Red Player's chance.");
        if(pclass.p1c == "red" && pclass.p2c == "blue"){
            redp.setText(pclass.p1);
            bluep.setText(pclass.p2);
         
        }
        else{
            redp.setText(pclass.p2);
            bluep.setText(pclass.p1);
        }
        //Resetting Array Values
        for(int i=0;i<=6;i++){
                pclass.a[i]=0;
                pclass.b[i]=0;
                pclass.c[i]=0;
                pclass.d[i]=0;
                pclass.e[i]=0;
                pclass.f[i]=0;
                pclass.g[i]=0;
        }
       
    }
    
    public void patternMatch(){
        
        if(pclass.turn==2){
            if(pclass.p1c == "red"){
                winner = pclass.p1;
            }
            else{
                winner = pclass.p2;
            }
        }
        else if(pclass.turn==1){
            if(pclass.p1c == "blue"){
                winner = pclass.p1;
            }
            else{
                winner = pclass.p2;
            }
        }
        Object[] options = {"Yes, please.",
                    "Return to main menu."};
        int n = JOptionPane.showOptionDialog(null,winner+" wins! Want to play again?",
        "Game Over.",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,     
        options, 
        options[0]); 
        if(n==JOptionPane.YES_OPTION){
            for(int i=0;i<=6;i++){
                pclass.a[i]=0;
                pclass.b[i]=0;
                pclass.c[i]=0;
                pclass.d[i]=0;
                pclass.e[i]=0;
                pclass.f[i]=0;
                pclass.g[i]=0;
            }
            new Play().setVisible(true);
            this.dispose();
            
        }
        else if(n==JOptionPane.NO_OPTION){
            new Splash().setVisible(true);
            this.dispose();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgCoinDropper = new javax.swing.ButtonGroup();
        jpWrap = new javax.swing.JPanel();
        jpRed = new javax.swing.JPanel();
        lblredp = new javax.swing.JLabel();
        redp = new javax.swing.JLabel();
        jpBlue = new javax.swing.JPanel();
        bluep = new javax.swing.JLabel();
        lblbluep = new javax.swing.JLabel();
        lblchance = new javax.swing.JLabel();
        d1 = new javax.swing.JButton();
        c0 = new javax.swing.JButton();
        f6 = new javax.swing.JButton();
        cmdG = new javax.swing.JButton();
        d6 = new javax.swing.JButton();
        a2 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        cmdE = new javax.swing.JButton();
        g6 = new javax.swing.JButton();
        cmdC = new javax.swing.JButton();
        f4 = new javax.swing.JButton();
        c1 = new javax.swing.JButton();
        c4 = new javax.swing.JButton();
        a5 = new javax.swing.JButton();
        g3 = new javax.swing.JButton();
        cmdD = new javax.swing.JButton();
        a6 = new javax.swing.JButton();
        g2 = new javax.swing.JButton();
        f1 = new javax.swing.JButton();
        g4 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        c5 = new javax.swing.JButton();
        cmdF = new javax.swing.JButton();
        cmdA = new javax.swing.JButton();
        e2 = new javax.swing.JButton();
        g1 = new javax.swing.JButton();
        g5 = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        cmdB = new javax.swing.JButton();
        e0 = new javax.swing.JButton();
        g0 = new javax.swing.JButton();
        a4 = new javax.swing.JButton();
        e4 = new javax.swing.JButton();
        c6 = new javax.swing.JButton();
        d2 = new javax.swing.JButton();
        a1 = new javax.swing.JButton();
        c3 = new javax.swing.JButton();
        e6 = new javax.swing.JButton();
        f0 = new javax.swing.JButton();
        a3 = new javax.swing.JButton();
        d0 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        e3 = new javax.swing.JButton();
        e5 = new javax.swing.JButton();
        f3 = new javax.swing.JButton();
        d4 = new javax.swing.JButton();
        f2 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        c2 = new javax.swing.JButton();
        e1 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        f5 = new javax.swing.JButton();
        a0 = new javax.swing.JButton();
        d3 = new javax.swing.JButton();
        d5 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(760, 760));
        setPreferredSize(new java.awt.Dimension(760, 760));
        setResizable(false);
        getContentPane().setLayout(null);

        jpWrap.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpRed.setBackground(new java.awt.Color(154, 51, 51));

        lblredp.setFont(new java.awt.Font("A little sunshine", 1, 22)); // NOI18N
        lblredp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblredp.setText("Red Player :");

        redp.setFont(new java.awt.Font("A little sunshine", 1, 24)); // NOI18N
        redp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        redp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jpRedLayout = new javax.swing.GroupLayout(jpRed);
        jpRed.setLayout(jpRedLayout);
        jpRedLayout.setHorizontalGroup(
            jpRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(redp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblredp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
        );
        jpRedLayout.setVerticalGroup(
            jpRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRedLayout.createSequentialGroup()
                .addComponent(lblredp, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(redp, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpWrap.add(jpRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        jpBlue.setBackground(new java.awt.Color(51, 148, 208));

        bluep.setFont(new java.awt.Font("A little sunshine", 1, 24)); // NOI18N
        bluep.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblbluep.setFont(new java.awt.Font("A little sunshine", 1, 22)); // NOI18N
        lblbluep.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblbluep.setText("Blue Player :");

        javax.swing.GroupLayout jpBlueLayout = new javax.swing.GroupLayout(jpBlue);
        jpBlue.setLayout(jpBlueLayout);
        jpBlueLayout.setHorizontalGroup(
            jpBlueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bluep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblbluep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
        );
        jpBlueLayout.setVerticalGroup(
            jpBlueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBlueLayout.createSequentialGroup()
                .addComponent(lblbluep, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bluep, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
        );

        jpWrap.add(jpBlue, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, -1, -1));

        lblchance.setFont(new java.awt.Font("A little sunshine", 1, 17)); // NOI18N
        lblchance.setForeground(new java.awt.Color(255, 255, 255));
        lblchance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jpWrap.add(lblchance, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 132, 81));

        d1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d1.setBorderPainted(false);
        d1.setContentAreaFilled(false);
        jpWrap.add(d1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, 66, 62));

        c0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c0.setBorderPainted(false);
        c0.setContentAreaFilled(false);
        jpWrap.add(c0, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 66, 62));

        f6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f6.setBorderPainted(false);
        f6.setContentAreaFilled(false);
        jpWrap.add(f6, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 640, 66, 62));

        cmdG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdG);
        cmdG.setContentAreaFilled(false);
        cmdG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdG, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, 65, 39));

        d6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d6.setBorderPainted(false);
        d6.setContentAreaFilled(false);
        jpWrap.add(d6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 640, 66, 62));

        a2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a2.setBorderPainted(false);
        a2.setContentAreaFilled(false);
        jpWrap.add(a2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 66, 62));

        b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b2.setBorderPainted(false);
        b2.setContentAreaFilled(false);
        jpWrap.add(b2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, 66, 62));

        cmdE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdE);
        cmdE.setContentAreaFilled(false);
        cmdE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdE, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 66, 39));

        g6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g6.setBorderPainted(false);
        g6.setContentAreaFilled(false);
        jpWrap.add(g6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 640, 66, 62));

        cmdC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdC);
        cmdC.setContentAreaFilled(false);
        cmdC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdC, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 66, 39));

        f4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f4.setBorderPainted(false);
        f4.setContentAreaFilled(false);
        jpWrap.add(f4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, 66, 62));

        c1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c1.setBorderPainted(false);
        c1.setContentAreaFilled(false);
        jpWrap.add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 66, 62));

        c4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c4.setBorderPainted(false);
        c4.setContentAreaFilled(false);
        jpWrap.add(c4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, 66, 62));

        a5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a5.setBorderPainted(false);
        a5.setContentAreaFilled(false);
        jpWrap.add(a5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 66, 62));

        g3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g3.setBorderPainted(false);
        g3.setContentAreaFilled(false);
        jpWrap.add(g3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, 66, 62));

        cmdD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdD);
        cmdD.setContentAreaFilled(false);
        cmdD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdD, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 66, 39));

        a6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a6.setBorderPainted(false);
        a6.setContentAreaFilled(false);
        jpWrap.add(a6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 640, 66, 62));

        g2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g2.setBorderPainted(false);
        g2.setContentAreaFilled(false);
        jpWrap.add(g2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 320, 66, 62));

        f1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f1.setBorderPainted(false);
        f1.setContentAreaFilled(false);
        jpWrap.add(f1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, 66, 62));

        g4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g4.setBorderPainted(false);
        g4.setContentAreaFilled(false);
        jpWrap.add(g4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 480, 66, 62));

        b3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b3.setBorderPainted(false);
        b3.setContentAreaFilled(false);
        jpWrap.add(b3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 66, 62));

        c5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c5.setBorderPainted(false);
        c5.setContentAreaFilled(false);
        jpWrap.add(c5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 560, 66, 62));

        cmdF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdF);
        cmdF.setContentAreaFilled(false);
        cmdF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdF, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 65, 39));

        cmdA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdA);
        cmdA.setContentAreaFilled(false);
        cmdA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdA, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 66, 39));

        e2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e2.setBorderPainted(false);
        e2.setContentAreaFilled(false);
        jpWrap.add(e2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 66, 62));

        g1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g1.setBorderPainted(false);
        g1.setContentAreaFilled(false);
        jpWrap.add(g1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 66, 62));

        g5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g5.setBorderPainted(false);
        g5.setContentAreaFilled(false);
        jpWrap.add(g5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 66, 62));

        b0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b0.setBorderPainted(false);
        b0.setContentAreaFilled(false);
        jpWrap.add(b0, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 66, 62));

        cmdB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/put.png"))); // NOI18N
        bgCoinDropper.add(cmdB);
        cmdB.setContentAreaFilled(false);
        cmdB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBActionPerformed(evt);
                drop(evt);
            }
        });
        jpWrap.add(cmdB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 66, 39));

        e0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e0.setBorderPainted(false);
        e0.setContentAreaFilled(false);
        jpWrap.add(e0, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 66, 62));

        g0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        g0.setBorderPainted(false);
        g0.setContentAreaFilled(false);
        jpWrap.add(g0, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, 66, 62));

        a4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a4.setBorderPainted(false);
        a4.setContentAreaFilled(false);
        jpWrap.add(a4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 66, 62));

        e4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e4.setBorderPainted(false);
        e4.setContentAreaFilled(false);
        jpWrap.add(e4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 66, 62));

        c6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c6.setBorderPainted(false);
        c6.setContentAreaFilled(false);
        jpWrap.add(c6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 640, 66, 62));

        d2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d2.setBorderPainted(false);
        d2.setContentAreaFilled(false);
        jpWrap.add(d2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 66, 62));

        a1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a1.setBorderPainted(false);
        a1.setContentAreaFilled(false);
        jpWrap.add(a1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 66, 62));

        c3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c3.setBorderPainted(false);
        c3.setContentAreaFilled(false);
        jpWrap.add(c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 66, 62));

        e6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e6.setBorderPainted(false);
        e6.setContentAreaFilled(false);
        jpWrap.add(e6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 640, 66, 62));

        f0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f0.setBorderPainted(false);
        f0.setContentAreaFilled(false);
        jpWrap.add(f0, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 66, 62));

        a3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a3.setBorderPainted(false);
        a3.setContentAreaFilled(false);
        jpWrap.add(a3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 66, 62));

        d0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d0.setBorderPainted(false);
        d0.setContentAreaFilled(false);
        jpWrap.add(d0, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 66, 62));

        b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b1.setBorderPainted(false);
        b1.setContentAreaFilled(false);
        jpWrap.add(b1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 66, 62));

        e3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e3.setBorderPainted(false);
        e3.setContentAreaFilled(false);
        jpWrap.add(e3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 66, 62));

        e5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e5.setBorderPainted(false);
        e5.setContentAreaFilled(false);
        jpWrap.add(e5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 560, 66, 62));

        f3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f3.setBorderPainted(false);
        f3.setContentAreaFilled(false);
        jpWrap.add(f3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 66, 62));

        d4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d4.setBorderPainted(false);
        d4.setContentAreaFilled(false);
        jpWrap.add(d4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 66, 62));

        f2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f2.setBorderPainted(false);
        f2.setContentAreaFilled(false);
        jpWrap.add(f2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 66, 62));

        b6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b6.setBorderPainted(false);
        b6.setContentAreaFilled(false);
        jpWrap.add(b6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 640, 66, 62));

        c2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        c2.setBorderPainted(false);
        c2.setContentAreaFilled(false);
        jpWrap.add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 66, 62));

        e1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        e1.setBorderPainted(false);
        e1.setContentAreaFilled(false);
        jpWrap.add(e1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 66, 62));

        b5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b5.setBorderPainted(false);
        b5.setContentAreaFilled(false);
        jpWrap.add(b5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 560, 66, 62));

        f5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        f5.setBorderPainted(false);
        f5.setContentAreaFilled(false);
        jpWrap.add(f5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 560, 66, 62));

        a0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        a0.setBorderPainted(false);
        a0.setContentAreaFilled(false);
        jpWrap.add(a0, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 66, 62));

        d3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d3.setBorderPainted(false);
        d3.setContentAreaFilled(false);
        jpWrap.add(d3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, 66, 62));

        d5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        d5.setBorderPainted(false);
        d5.setContentAreaFilled(false);
        jpWrap.add(d5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 560, 66, 62));

        b4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/idle.png"))); // NOI18N
        b4.setBorderPainted(false);
        b4.setContentAreaFilled(false);
        jpWrap.add(b4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 480, 66, 62));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg.jpg"))); // NOI18N
        jpWrap.add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 740));

        getContentPane().add(jpWrap);
        jpWrap.setBounds(0, 0, 760, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGActionPerformed
        int x = 6,pattern=1;
        while(pclass.g[x]!=0){
            x--;
        }
        pclass.g[x] = pclass.turn;

        if(pclass.g[6]==1){
            g6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[6]==2){
            g6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.g[5]==1){
            g5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[5]==2){
            g5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.g[4]==1){
            g4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[4]==2){
            g4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.g[3]==1){
            g3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[3]==2){
            g3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.g[2]==1){
            g2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[2]==2){
            g2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.g[1]==1){
            g1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[1]==2){
            g1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.g[0]==1){
            g0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.g[0]==2){
            g0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
        
        //Horizontal
        if(pclass.f[x]==pclass.g[x]){
            if(pclass.e[x]==pclass.g[x]){
                if(pclass.d[x]==pclass.g[x]){  
                    patternMatch();
                }
            }
        }
        
        //        
        //Diagonal
        //

        //Towards left
        if(x+1<=6){//Down
            if(pclass.f[x+1]==pclass.turn){
                pattern++;  
                if(x+2<=6){
                    if(pclass.e[x+2]==pclass.turn){
                        pattern++;   
                        if(x+3<=6){
                            if(pclass.d[x+3]==pclass.turn){
                                pattern++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.f[x-1]==pclass.turn){
                pattern++;   
                if(x-2>=0){
                    if(pclass.e[x-2]==pclass.turn){
                        pattern++; 
                        if(x-3>=0){
                            if(pclass.d[x-3]==pclass.turn){
                                pattern++;   
                            }
                        }
                    }
                }
            }
        }
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.g[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.g[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){
           patternMatch();
        }
        else{
            pattern = 1;
        }
        
        if(pclass.turn == 2){
            pclass.turn = 1;
        }
        else if(pclass.turn == 1){
            pclass.turn = 2;
        }
        if(pclass.g[0] == 1 || pclass.g[0] == 2){
            cmdG.setEnabled(false);
        }
    }//GEN-LAST:event_cmdGActionPerformed

    private void cmdCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCActionPerformed
        int x = 6,pattern=1,ltor=1,rtol=1;
        while(pclass.c[x]!=0){
            x--;
        }
        pclass.c[x] = pclass.turn;
        
        if(pclass.c[6]==1){
            c6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[6]==2){
            c6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.c[5]==1){
            c5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[5]==2){
            c5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.c[4]==1){
            c4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[4]==2){
            c4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.c[3]==1){
            c3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[3]==2){
            c3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.c[2]==1){
            c2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[2]==2){
            c2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.c[1]==1){
            c1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[1]==2){
            c1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.c[0]==1){
            c0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.c[0]==2){
            c0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.c[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.c[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){
           patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //
        //Horizontal
        //
        
        //Towards left
        if(pclass.b[x]==pclass.turn){
            pattern++;
            if(pclass.a[x]==pclass.turn){
                pattern++;
            }
        }
        //Towards right
        if(pclass.d[x]==pclass.turn){
            pattern++;
            if(pclass.e[x]==pclass.turn){
                pattern++;
                if(pclass.f[x]==pclass.turn){
                    pattern++;
                }
            }
        }
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //        
        //Diagonal
        //
        
        //Towards right
        if(x+1<=6){//Down
            if(pclass.d[x+1]==pclass.turn){
                ltor++;  
                if(x+2<=6){
                    if(pclass.e[x+2]==pclass.turn){
                        ltor++;
                        if(x+3<=6){
                            if(pclass.f[x+3]==pclass.turn){
                                ltor++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.d[x-1]==pclass.turn){
                rtol++;
                if(x-2>=0){
                    if(pclass.e[x-2]==pclass.turn){
                        rtol++;
                        if(x-3>=0){
                            if(pclass.f[x-3]==pclass.turn){
                                rtol++;   
                            }
                        }
                    }
                }
            }
        }
        //Towards left
        if(x+1<=6){//Down
            if(pclass.b[x+1]==pclass.turn){
               rtol++;  
                if(x+2<=6){
                    if(pclass.a[x+2]==pclass.turn){
                        rtol++;   
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.b[x-1]==pclass.turn){
                ltor++;   
                if(x-2>=0){
                    if(pclass.a[x-2]==pclass.turn){
                        ltor++; 
                    }
                }
            }
        }
       if(ltor>=4 || rtol>=4){
            patternMatch();
        }
        else{
            pattern = 1;
            ltor = 1;
            rtol = 1;
        }
        
        if(pclass.turn == 1){
            pclass.turn = 2;
        }
        else if(pclass.turn == 2){
            pclass.turn = 1;
        }
        if(pclass.c[0] == 1 || pclass.c[0] == 2){
            cmdC.setEnabled(false);
        }
        
    }//GEN-LAST:event_cmdCActionPerformed

    private void cmdFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFActionPerformed
        int x = 6,pattern=1,ltor=1,rtol=1;
        while(pclass.f[x]!=0){
            x--;
        }
        pclass.f[x] = pclass.turn;

        if(pclass.f[6]==1){
            f6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[6]==2){
            f6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.f[5]==1){
            f5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[5]==2){
            f5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.f[4]==1){
            f4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[4]==2){
            f4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.f[3]==1){
            f3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[3]==2){
            f3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.f[2]==1){
            f2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[2]==2){
            f2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.f[1]==1){
            f1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[1]==2){
            f1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.f[0]==1){
            f0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.f[0]==2){
            f0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.f[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.f[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){
           patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //
        //Horizontal
        //
        
        //Towards left
        if(pclass.e[x]==pclass.turn){
            pattern++;
            if(pclass.d[x]==pclass.turn){
                pattern++;
                if(pclass.c[x]==pclass.turn){
                    pattern++;
                }
            }
        }
        //Towards right
        if(pclass.g[x]==pclass.turn){
            pattern++;
        }     
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //        
        //Diagonal
        //
        
        //Towards right
        if(x+1<=6){//Down
            if(pclass.g[x+1]==pclass.turn){
                ltor++;
            }
        }
        if(x-1>=0){//Up
            if(pclass.g[x-1]==pclass.turn){
                rtol++;
            }
        }
        //Towards left
        if(x+1<=6){//Down
            if(pclass.e[x+1]==pclass.turn){
                rtol++;  
                if(x+2<=6){
                    if(pclass.d[x+2]==pclass.turn){
                        rtol++;   
                        if(x+3<=6){
                            if(pclass.c[x+3]==pclass.turn){
                                rtol++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.e[x-1]==pclass.turn){
                ltor++;   
                if(x-2>=0){
                    if(pclass.d[x-2]==pclass.turn){
                        ltor++; 
                        if(x-3>=0){
                            if(pclass.c[x-3]==pclass.turn){
                                ltor++;   
                            }
                        }
                    }
                }
            }
        }
        if(ltor>=4 || rtol>=4){
            patternMatch();
        }
        else{
            pattern = 1;
            ltor = 1;
            rtol = 1;
        }
        
        if(pclass.turn == 1){
            pclass.turn = 2;
        }
        else if(pclass.turn == 2){
            pclass.turn = 1;
        }
        if(pclass.f[0] == 1 || pclass.f[0] == 2){
            cmdF.setEnabled(false);
        }
    }//GEN-LAST:event_cmdFActionPerformed

    private void cmdEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEActionPerformed
        int x = 6,pattern=1,ltor=1,rtol=1;
        while(pclass.e[x]!=0){
            x--;
        }
        pclass.e[x] = pclass.turn;

        if(pclass.e[6]==1){
            e6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[6]==2){
            e6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.e[5]==1){
            e5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[5]==2){
            e5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.e[4]==1){
            e4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[4]==2){
            e4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.e[3]==1){
            e3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[3]==2){
            e3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.e[2]==1){
            e2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[2]==2){
            e2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.e[1]==1){
            e1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[1]==2){
            e1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.e[0]==1){
            e0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.e[0]==2){
            e0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.e[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.e[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){
           patternMatch();
        }
        else{
            pattern = 1;
        }
        //
        //Horizontal
        //
        
        //Towards left
        if(pclass.d[x]==pclass.turn){
            pattern++;
            if(pclass.c[x]==pclass.turn){
                pattern++;
                if(pclass.b[x]==pclass.turn){
                    pattern++;
                }
            }
        }
        //Towards right
        if(pclass.f[x]==pclass.turn){
            pattern++;
            if(pclass.g[x]==pclass.turn){
                pattern++;
            }
        }
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //        
        //Diagonal
        //
        
        //Towards right
        if(x+1<=6){//Down
            if(pclass.f[x+1]==pclass.turn){
                ltor++;  
                if(x+2<=6){
                    if(pclass.g[x+2]==pclass.turn){
                        ltor++;
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.f[x-1]==pclass.turn){
                rtol++;
                if(x-2>=0){
                    if(pclass.g[x-2]==pclass.turn){
                        rtol++;
                    }
                }
            }
        }
        //Towards left
        if(x+1<=6){//Down
            if(pclass.d[x+1]==pclass.turn){
                rtol++;  
                if(x+2<=6){
                    if(pclass.c[x+2]==pclass.turn){
                        rtol++;   
                        if(x+3<=6){
                            if(pclass.b[x+3]==pclass.turn){
                                rtol++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.d[x-1]==pclass.turn){
                ltor++;   
                if(x-2>=0){
                    if(pclass.c[x-2]==pclass.turn){
                        ltor++; 
                        if(x-3>=0){
                            if(pclass.b[x-3]==pclass.turn){
                                ltor++;   
                            }
                        }
                    }
                }
            }
        }
        if(ltor>=4 || rtol>=4){
            patternMatch();
        }
        else{
            pattern = 1;
            ltor = 1;
            rtol = 1;
        }
        
        if(pclass.turn == 1){
            pclass.turn = 2;
        }
        else if(pclass.turn == 2){
            pclass.turn = 1;
        }
        if(pclass.e[0] == 1 || pclass.e[0] == 2){
            cmdE.setEnabled(false);
        }
    }//GEN-LAST:event_cmdEActionPerformed

    private void cmdDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDActionPerformed
        int x = 6,pattern=1,ltor=1,rtol=1;
        while(pclass.d[x]!=0){
            x--;
        }
        pclass.d[x] = pclass.turn;

        if(pclass.d[6]==1){
            d6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[6]==2){
            d6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.d[5]==1){
            d5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[5]==2){
            d5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.d[4]==1){
            d4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[4]==2){
            d4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.d[3]==1){
            d3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[3]==2){
            d3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.d[2]==1){
            d2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[2]==2){
            d2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.d[1]==1){
            d1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[1]==2){
            d1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.d[0]==1){
            d0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.d[0]==2){
            d0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.d[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.d[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){
                    patternMatch();
                }
        else
            pattern = 1;
        
        //
        //Horizontal
        //
        
        //Towards left
        if(pclass.c[x]==pclass.turn){
            pattern++;
            if(pclass.b[x]==pclass.turn){
                pattern++;
                if(pclass.a[x]==pclass.turn){
                    pattern++;
                }
            }
        }
        //Towards right
        if(pclass.e[x]==pclass.turn){
            pattern++;
            if(pclass.f[x]==pclass.turn){
                pattern++;
                if(pclass.g[x]==pclass.turn){
                    pattern++;
                }
            }
        }
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //        
        //Diagonal
        //
        
        //Towards right
        if(x+1<=6){//Down
            if(pclass.e[x+1]==pclass.turn){
                ltor++;  
                if(x+2<=6){
                    if(pclass.f[x+2]==pclass.turn){
                        ltor++;
                        if(x+3<=6){
                            if(pclass.g[x+3]==pclass.turn){
                                ltor++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.e[x-1]==pclass.turn){
                rtol++;
                if(x-2>=0){
                    if(pclass.f[x-2]==pclass.turn){
                        rtol++;
                        if(x-3>=0){
                            if(pclass.g[x-3]==pclass.turn){
                                rtol++;   
                            }
                        }
                    }
                }
            }
        }
        //Towards left
        if(x+1<=6){//Down
            if(pclass.c[x+1]==pclass.turn){
                rtol++;  
                if(x+2<=6){
                    if(pclass.b[x+2]==pclass.turn){
                        rtol++;   
                        if(x+3<=6){
                            if(pclass.a[x+3]==pclass.turn){
                                rtol++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.c[x-1]==pclass.turn){
                ltor++;   
                if(x-2>=0){
                    if(pclass.b[x-2]==pclass.turn){
                        ltor++; 
                        if(x-3>=0){
                            if(pclass.a[x-3]==pclass.turn){
                                ltor++;   
                            }
                        }
                    }
                }
            }
        }
        if(ltor>=4 || rtol>=4){
            patternMatch();
        }
        else{
            pattern = 1;
            ltor = 1;
            rtol = 1;
        }
        
        if(pclass.turn == 1){
            pclass.turn = 2;
        }
        else if(pclass.turn == 2){
            pclass.turn = 1;
        }
        if(pclass.d[0] == 1 || pclass.d[0] == 2){
            cmdD.setEnabled(false);
        }
    }//GEN-LAST:event_cmdDActionPerformed

    private void cmdBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBActionPerformed

        int x = 6,pattern=1,ltor=1,rtol=1;
        while(pclass.b[x]!=0){
            x--;
        }
        pclass.b[x] = pclass.turn;

        if(pclass.b[6]==1){
            b6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[6]==2){
            b6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.b[5]==1){
            b5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[5]==2){
            b5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.b[4]==1){
            b4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[4]==2){
            b4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.b[3]==1){
            b3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[3]==2){
            b3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.b[2]==1){
            b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[2]==2){
            b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.b[1]==1){
            b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[1]==2){
            b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.b[0]==1){
            b0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.b[0]==2){
            b0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.b[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.b[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){
           patternMatch();
        }
        else{
            pattern = 1;
        }
        //
        //Horizontal
        //
        
        //Towards left
        if(pclass.a[x]==pclass.turn){
            pattern++;
        }
        //Towards right
        if(pclass.c[x]==pclass.turn){
            pattern++;
            if(pclass.d[x]==pclass.turn){
                pattern++;
                if(pclass.e[x]==pclass.turn){
                    pattern++;
                }
            }
        }
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //        
        //Diagonal
        //
        
        //Towards right
        if(x+1<=6){//Down
            if(pclass.c[x+1]==pclass.turn){
                ltor++;  
                if(x+2<=6){
                    if(pclass.d[x+2]==pclass.turn){
                        ltor++;
                        if(x+3<=6){
                            if(pclass.e[x+3]==pclass.turn){
                                ltor++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.c[x-1]==pclass.turn){
                rtol++;
                if(x-2>=0){
                    if(pclass.d[x-2]==pclass.turn){
                        rtol++;
                        if(x-3>=0){
                            if(pclass.e[x-3]==pclass.turn){
                                rtol++;   
                            }
                        }
                    }
                }
            }
        }
        //Towards left
        if(x+1<=6){//Down
            if(pclass.a[x+1]==pclass.turn){
                rtol++;  
            }
        }
        if(x-1>=0){//Up
            if(pclass.a[x-1]==pclass.turn){
                ltor++;   
            }
        }
        if(ltor>=4 || rtol>=4){
            patternMatch();
        }
        else{
            pattern = 1;
            ltor = 1;
            rtol = 1;
        }
        
        if(pclass.turn == 1){
            pclass.turn = 2;
        }
        else if(pclass.turn == 2){
            pclass.turn = 1;
        }
        if(pclass.b[0] == 1 || pclass.b[0] == 2){
            cmdB.setEnabled(false);
        }
    }//GEN-LAST:event_cmdBActionPerformed

    private void cmdAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAActionPerformed
        int x = 6,pattern=1;
        while(pclass.a[x]!=0){
            x--;
        }
        pclass.a[x] = pclass.turn;

        if(pclass.a[6]==1){
            a6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[6]==2){
            a6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.a[5]==1){
            a5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[5]==2){
            a5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.a[4]==1){
            a4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[4]==2){
            a4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.a[3]==1){
            a3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[3]==2){
            a3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.a[2]==1){
            a2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[2]==2){
            a2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.a[1]==1){
            a1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[1]==2){
            a1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }

        if(pclass.a[0]==1){
            a0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blue.png")));
        }
        else if(pclass.a[0]==2){
            a0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/red.png")));
        }
       
        //Horizontal
        if(pclass.b[x]==pclass.turn){
            if(pclass.c[x]==pclass.turn){
                if(pclass.d[x]==pclass.turn){  
                    patternMatch();
                }
            }
        }
        
        //        
        //Diagonal
        //
        
        //Towards right
        if(x+1<=6){//Down
            if(pclass.b[x+1]==pclass.turn){
                pattern++;  
                if(x+2<=6){
                    if(pclass.c[x+2]==pclass.turn){
                        pattern++;
                        if(x+3<=6){
                            if(pclass.d[x+3]==pclass.turn){
                                pattern++;   
                            }
                        }
                    }
                }
            }
        }
        if(x-1>=0){//Up
            if(pclass.b[x-1]==pclass.turn){
                pattern++;
                if(x-2>=0){
                    if(pclass.c[x-2]==pclass.turn){
                        pattern++;
                        if(x-3>=0){
                            if(pclass.d[x-3]==pclass.turn){
                                pattern++;   
                            }
                        }
                    }
                }
            }
        }
        if(pattern>=4){
            patternMatch();
        }
        else{
            pattern = 1;
        }
        
        //Vertical
        if(x<=3){
            for(int i=x+1;i<=6;i++){
                if(pclass.a[i]==pclass.turn){
                    pattern++;
                }
                else if(pclass.a[i]!=pclass.turn){
                    break;
                }
            }
        }
        if(pattern>=4){   
                    patternMatch();
        }
        else{
            pattern = 1;
        }
        
        if(pclass.turn == 1){
            pclass.turn = 2;
        }
        else if(pclass.turn == 2){
            pclass.turn = 1;
        }
        if(pclass.a[0] == 1 || pclass.a[0] == 2){
            cmdA.setEnabled(false);
        }
        
    }//GEN-LAST:event_cmdAActionPerformed

    private void drop(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop
        if(pclass.turn==2){
            lblchance.setText("Red Player's chance.");
        }
        else if(pclass.turn==1){
            lblchance.setText("Blue Player's chance.");
        }
    }//GEN-LAST:event_drop
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Play().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a0;
    private javax.swing.JButton a1;
    private javax.swing.JButton a2;
    private javax.swing.JButton a3;
    private javax.swing.JButton a4;
    private javax.swing.JButton a5;
    private javax.swing.JButton a6;
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.ButtonGroup bgCoinDropper;
    private javax.swing.JLabel bluep;
    private javax.swing.JButton c0;
    private javax.swing.JButton c1;
    private javax.swing.JButton c2;
    private javax.swing.JButton c3;
    private javax.swing.JButton c4;
    private javax.swing.JButton c5;
    private javax.swing.JButton c6;
    private javax.swing.JButton cmdA;
    private javax.swing.JButton cmdB;
    private javax.swing.JButton cmdC;
    private javax.swing.JButton cmdD;
    private javax.swing.JButton cmdE;
    private javax.swing.JButton cmdF;
    private javax.swing.JButton cmdG;
    private javax.swing.JButton d0;
    private javax.swing.JButton d1;
    private javax.swing.JButton d2;
    private javax.swing.JButton d3;
    private javax.swing.JButton d4;
    private javax.swing.JButton d5;
    private javax.swing.JButton d6;
    private javax.swing.JButton e0;
    private javax.swing.JButton e1;
    private javax.swing.JButton e2;
    private javax.swing.JButton e3;
    private javax.swing.JButton e4;
    private javax.swing.JButton e5;
    private javax.swing.JButton e6;
    private javax.swing.JButton f0;
    private javax.swing.JButton f1;
    private javax.swing.JButton f2;
    private javax.swing.JButton f3;
    private javax.swing.JButton f4;
    private javax.swing.JButton f5;
    private javax.swing.JButton f6;
    private javax.swing.JButton g0;
    private javax.swing.JButton g1;
    private javax.swing.JButton g2;
    private javax.swing.JButton g3;
    private javax.swing.JButton g4;
    private javax.swing.JButton g5;
    private javax.swing.JButton g6;
    private javax.swing.JPanel jpBlue;
    private javax.swing.JPanel jpRed;
    private javax.swing.JPanel jpWrap;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblbluep;
    private javax.swing.JLabel lblchance;
    private javax.swing.JLabel lblredp;
    private javax.swing.JLabel redp;
    // End of variables declaration//GEN-END:variables
}
